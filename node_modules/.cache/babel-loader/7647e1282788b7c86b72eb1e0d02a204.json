{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import{useDispatch,useSelector}from'react-redux';import{productSlice}from'./features/products/slices/productSlice';var store=configureStore({reducer:{product:productSlice.reducer}});export var useAppDispatch=function useAppDispatch(){return useDispatch();};export var useAppSelector=useSelector;export default store;","map":{"version":3,"sources":["/Users/cash/dev/stackline/src/store.ts"],"names":["configureStore","useDispatch","useSelector","productSlice","store","reducer","product","useAppDispatch","useAppSelector"],"mappings":"AAAA,OAASA,cAAT,KAA+B,kBAA/B,CACA,OAA+BC,WAA/B,CAA4CC,WAA5C,KAA+D,aAA/D,CACA,OAASC,YAAT,KAA6B,yCAA7B,CAEA,GAAMC,CAAAA,KAAK,CAAGJ,cAAc,CAAC,CAC3BK,OAAO,CAAE,CACPC,OAAO,CAAEH,YAAY,CAACE,OADf,CADkB,CAAD,CAA5B,CASA,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAMN,CAAAA,WAAW,EAAjB,EAAvB,CACP,MAAO,IAAMO,CAAAA,cAA+C,CAAGN,WAAxD,CAEP,cAAeE,CAAAA,KAAf","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { productSlice } from './features/products/slices/productSlice';\n\nconst store = configureStore({\n  reducer: {\n    product: productSlice.reducer\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default store;"]},"metadata":{},"sourceType":"module"}