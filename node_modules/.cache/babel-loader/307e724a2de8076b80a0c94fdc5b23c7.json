{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport getProductById from '../api/getProductById';\nconst initialState = {\n  status: 'idle'\n};\nexport const fetchProductById = createAsyncThunk('products/fetchProductById', async productId => {\n  return await getProductById({\n    productId\n  });\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProductById.pending, (state, action) => {\n      state.status = 'pending';\n    }).addCase(fetchProductById.fulfilled, (state, action) => {\n      state.product = action.payload;\n      state.status = 'succeeded';\n    }).addCase(fetchProductById.rejected, (state, action) => {\n      state.status = 'failed';\n    });\n  }\n});","map":{"version":3,"sources":["/Users/cash/dev/stackline/src/features/products/slices/productSlice.ts"],"names":["createSlice","createAsyncThunk","getProductById","initialState","status","fetchProductById","productId","productSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","product","payload","rejected"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AASA,MAAMC,YAA0B,GAAG;AACjCC,EAAAA,MAAM,EAAE;AADyB,CAAnC;AAIA,OAAO,MAAMC,gBAAgB,GAAGJ,gBAAgB,CAAC,2BAAD,EAA8B,MAAOK,SAAP,IAA6B;AACzG,SAAO,MAAMJ,cAAc,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAA3B;AACD,CAF+C,CAAzC;AAIP,OAAO,MAAMC,YAAY,GAAGP,WAAW,CAAC;AACtCQ,EAAAA,IAAI,EAAE,SADgC;AAEtCL,EAAAA,YAFsC;AAGtCM,EAAAA,QAAQ,EAAE,EAH4B;AAItCC,EAAAA,aAAa,EAAEC,OAAO,IAAI;AACxBA,IAAAA,OAAO,CACJC,OADH,CACWP,gBAAgB,CAACQ,OAD5B,EACqC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpDD,MAAAA,KAAK,CAACV,MAAN,GAAe,SAAf;AACD,KAHH,EAIGQ,OAJH,CAIWP,gBAAgB,CAACW,SAJ5B,EAIuC,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACtDD,MAAAA,KAAK,CAACG,OAAN,GAAgBF,MAAM,CAACG,OAAvB;AACAJ,MAAAA,KAAK,CAACV,MAAN,GAAe,WAAf;AACD,KAPH,EAQGQ,OARH,CAQWP,gBAAgB,CAACc,QAR5B,EAQsC,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACrDD,MAAAA,KAAK,CAACV,MAAN,GAAe,QAAf;AACD,KAVH;AAWD;AAhBqC,CAAD,CAAhC","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport getProductById from '../api/getProductById'\nimport { ProductModel } from '../api/productModels';\n\ninterface ProductState {\n  error?: Error;\n  product?: ProductModel;\n  status: 'idle' | 'pending' | 'succeeded' | 'failed';\n}\n\nconst initialState: ProductState = {\n  status: 'idle'\n}\n\nexport const fetchProductById = createAsyncThunk('products/fetchProductById', async (productId: string) => {\n  return await getProductById({ productId });\n})\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(fetchProductById.pending, (state, action) => {\n        state.status = 'pending';\n      })\n      .addCase(fetchProductById.fulfilled, (state, action) => {\n        state.product = action.payload;\n        state.status = 'succeeded';\n      })\n      .addCase(fetchProductById.rejected, (state, action) => {\n        state.status = 'failed';\n      })\n  }\n})"]},"metadata":{},"sourceType":"module"}