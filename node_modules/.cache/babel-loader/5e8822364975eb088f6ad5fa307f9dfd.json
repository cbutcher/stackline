{"ast":null,"code":"import{useEffect}from\"react\";import Error from\"../../../common/components/Error\";import Loading from\"../../../common/components/Loading\";import{useAppDispatch,useAppSelector}from\"../../../store\";import{fetchProductById}from\"../slices/productSlice\";import Product from\"./Product\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function ConnectedProduct(_ref){var productId=_ref.productId;var _useAppSelector=useAppSelector(function(state){return state.product;}),product=_useAppSelector.product,status=_useAppSelector.status,error=_useAppSelector.error;var dispatch=useAppDispatch();useEffect(function(){dispatch(fetchProductById(productId));},[]);if(status==='pending'||status==='idle'){return/*#__PURE__*/_jsx(Loading,{});}if(error){return/*#__PURE__*/_jsx(Error,{});}if(product){return/*#__PURE__*/_jsx(Product,{product:product});}return null;// unreachable\n}","map":{"version":3,"sources":["/Users/cash/dev/stackline/src/features/products/components/ConnectedProduct.tsx"],"names":["useEffect","Error","Loading","useAppDispatch","useAppSelector","fetchProductById","Product","ConnectedProduct","productId","state","product","status","error","dispatch"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,kCAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oCAApB,CACA,OAASC,cAAT,CAAyBC,cAAzB,KAA+C,gBAA/C,CACA,OAASC,gBAAT,KAAiC,wBAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,2CAMA,cAAe,SAASC,CAAAA,gBAAT,MAAgE,IAApCC,CAAAA,SAAoC,MAApCA,SAAoC,CAC7E,oBAAmCJ,cAAc,CAAC,SAAAK,KAAK,QAAIA,CAAAA,KAAK,CAACC,OAAV,EAAN,CAAjD,CAAQA,OAAR,iBAAQA,OAAR,CAAiBC,MAAjB,iBAAiBA,MAAjB,CAAyBC,KAAzB,iBAAyBA,KAAzB,CACA,GAAMC,CAAAA,QAAQ,CAAGV,cAAc,EAA/B,CAEAH,SAAS,CAAC,UAAM,CACda,QAAQ,CAACR,gBAAgB,CAACG,SAAD,CAAjB,CAAR,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAIG,MAAM,GAAK,SAAX,EAAwBA,MAAM,GAAK,MAAvC,CAA+C,CAC7C,mBAAO,KAAC,OAAD,IAAP,CACD,CAED,GAAIC,KAAJ,CAAW,CACT,mBAAO,KAAC,KAAD,IAAP,CACD,CAED,GAAIF,OAAJ,CAAa,CACX,mBAAO,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,EAAP,CACD,CAED,MAAO,KAAP,CAAa;AACd","sourcesContent":["import { useEffect } from \"react\";\nimport Error from \"../../../common/components/Error\";\nimport Loading from \"../../../common/components/Loading\";\nimport { useAppDispatch, useAppSelector } from \"../../../store\";\nimport { fetchProductById } from \"../slices/productSlice\";\nimport Product from \"./Product\";\n\nexport interface ConnectedProductProps {\n  productId: string;\n}\n\nexport default function ConnectedProduct({ productId }: ConnectedProductProps) {\n  const { product, status, error } = useAppSelector(state => state.product);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchProductById(productId))\n  }, []);\n\n  if (status === 'pending' || status === 'idle') {\n    return <Loading />;\n  }\n\n  if (error) {\n    return <Error />;\n  }\n\n  if (product) {\n    return <Product product={product} />;\n  }\n\n  return null; // unreachable\n}"]},"metadata":{},"sourceType":"module"}