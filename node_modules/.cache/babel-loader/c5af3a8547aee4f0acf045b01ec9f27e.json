{"ast":null,"code":"import _asyncToGenerator from\"/Users/cash/dev/stackline/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/cash/dev/stackline/node_modules/@babel/runtime/regenerator/index.js\";import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import getProductById from'../api/getProductById';var initialState={status:'idle'};export var fetchProductById=createAsyncThunk('products/fetchProductById',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(productId){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getProductById({productId:productId});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export var productSlice=createSlice({name:'product',initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder.addCase(fetchProductById.pending,function(state,action){state.status='pending';}).addCase(fetchProductById.fulfilled,function(state,action){state.product=action.payload;state.status='succeeded';}).addCase(fetchProductById.rejected,function(state,action){state.status='failed';console.log(action.error);});}});","map":{"version":3,"sources":["/Users/cash/dev/stackline/src/features/products/slices/productSlice.ts"],"names":["createSlice","createAsyncThunk","getProductById","initialState","status","fetchProductById","productId","productSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","product","payload","rejected","console","log","error"],"mappings":"iOAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,MAAOC,CAAAA,cAAP,KAA2B,uBAA3B,CASA,GAAMC,CAAAA,YAA0B,CAAG,CACjCC,MAAM,CAAE,MADyB,CAAnC,CAIA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGJ,gBAAgB,CAAC,2BAAD,0FAA8B,iBAAOK,SAAP,wIAC/DJ,CAAAA,cAAc,CAAC,CAAEI,SAAS,CAATA,SAAF,CAAD,CADiD,6GAA9B,+DAAzC,CAIP,MAAO,IAAMC,CAAAA,YAAY,CAAGP,WAAW,CAAC,CACtCQ,IAAI,CAAE,SADgC,CAEtCL,YAAY,CAAZA,YAFsC,CAGtCM,QAAQ,CAAE,EAH4B,CAItCC,aAAa,CAAE,uBAAAC,OAAO,CAAI,CACxBA,OAAO,CACJC,OADH,CACWP,gBAAgB,CAACQ,OAD5B,CACqC,SAACC,KAAD,CAAQC,MAAR,CAAmB,CACpDD,KAAK,CAACV,MAAN,CAAe,SAAf,CACD,CAHH,EAIGQ,OAJH,CAIWP,gBAAgB,CAACW,SAJ5B,CAIuC,SAACF,KAAD,CAAQC,MAAR,CAAmB,CACtDD,KAAK,CAACG,OAAN,CAAgBF,MAAM,CAACG,OAAvB,CACAJ,KAAK,CAACV,MAAN,CAAe,WAAf,CACD,CAPH,EAQGQ,OARH,CAQWP,gBAAgB,CAACc,QAR5B,CAQsC,SAACL,KAAD,CAAQC,MAAR,CAAmB,CACrDD,KAAK,CAACV,MAAN,CAAe,QAAf,CACAgB,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACO,KAAnB,EACD,CAXH,EAYD,CAjBqC,CAAD,CAAhC","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport getProductById from '../api/getProductById'\nimport { ProductModel } from '../api/productModels';\n\ninterface ProductState {\n  error?: Error;\n  product?: ProductModel;\n  status: 'idle' | 'pending' | 'succeeded' | 'failed';\n}\n\nconst initialState: ProductState = {\n  status: 'idle'\n}\n\nexport const fetchProductById = createAsyncThunk('products/fetchProductById', async (productId: string) => {\n  return await getProductById({ productId });\n})\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(fetchProductById.pending, (state, action) => {\n        state.status = 'pending';\n      })\n      .addCase(fetchProductById.fulfilled, (state, action) => {\n        state.product = action.payload;\n        state.status = 'succeeded';\n      })\n      .addCase(fetchProductById.rejected, (state, action) => {\n        state.status = 'failed';\n        console.log(action.error);\n      })\n  }\n})"]},"metadata":{},"sourceType":"module"}