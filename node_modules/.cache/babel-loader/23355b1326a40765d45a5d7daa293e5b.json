{"ast":null,"code":"var _jsxFileName = \"/Users/cash/dev/stackline/src/features/products/components/ProductSalesTable.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"../styles/productSales.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_SORT = {\n  key: 'weekEnding',\n  direction: 'DESC'\n};\nconst usdFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 0\n});\n\nfunction getSaleComparator(_ref) {\n  let {\n    key,\n    direction\n  } = _ref;\n\n  if (key === 'weekEnding') {\n    const compareDate = (saleA, saleB) => {\n      const [dateA, dateB] = [new Date(saleA[key]), new Date(saleB[key])];\n\n      if (dateA < dateB) {\n        return -1;\n      } else if (dateA > dateB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    };\n\n    const inversedCompareDate = (a, b) => -1 * compareDate(a, b);\n\n    return direction === 'ASC' ? compareDate : inversedCompareDate;\n  } else {\n    const compareNumber = (saleA, saleB) => {\n      return saleA[key] - saleB[key];\n    };\n\n    const inversedCompareNumber = (a, b) => -1 * compareNumber(a, b);\n\n    return direction === 'ASC' ? compareNumber : inversedCompareNumber;\n  }\n}\n\nexport default function ProductSalesTable(_ref2) {\n  _s();\n\n  let {\n    sales\n  } = _ref2;\n  const [sort, setSort] = useState(DEFAULT_SORT);\n\n  const updateSort = function (key) {\n    if (sort.key === key) {\n      setSort({\n        key: key,\n        direction: sort.direction === 'ASC' ? 'DESC' : 'ASC'\n      });\n    } else {\n      setSort({\n        key: key,\n        direction: DEFAULT_SORT.direction\n      });\n    }\n  };\n\n  const sorted = [...sales].sort(getSaleComparator(sort));\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: sort.direction === 'ASC' ? 'Ascending' : 'Descending',\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: sort.key === 'weekEnding' ? 'Sorted' : '',\n          onClick: () => updateSort('weekEnding'),\n          scope: \"col\",\n          children: \"Week Ending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: sort.key === 'retailSales' ? 'Sorted' : '',\n          onClick: () => updateSort('retailSales'),\n          scope: \"col\",\n          children: \"Retail Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: sort.key === 'wholesaleSales' ? 'Sorted' : '',\n          onClick: () => updateSort('wholesaleSales'),\n          scope: \"col\",\n          children: \"Wholesale Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: sort.key === 'unitsSold' ? 'Sorted' : '',\n          onClick: () => updateSort('unitsSold'),\n          scope: \"col\",\n          children: \"Units Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: sort.key === 'retailerMargin' ? 'Sorted' : '',\n          onClick: () => updateSort('retailerMargin'),\n          scope: \"col\",\n          children: \"Retailer Margin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: sorted.map((sale, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: sale.weekEnding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: usdFormatter.format(sale.retailSales)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: usdFormatter.format(sale.wholesaleSales)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: sale.unitsSold\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: usdFormatter.format(sale.retailerMargin)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, `sale-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductSalesTable, \"nTRFspHsayRd1OPwXID4+KAaQjQ=\");\n\n_c = ProductSalesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSalesTable\");","map":{"version":3,"sources":["/Users/cash/dev/stackline/src/features/products/components/ProductSalesTable.tsx"],"names":["useState","DEFAULT_SORT","key","direction","usdFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","getSaleComparator","compareDate","saleA","saleB","dateA","dateB","Date","inversedCompareDate","a","b","compareNumber","inversedCompareNumber","ProductSalesTable","sales","sort","setSort","updateSort","sorted","map","sale","index","weekEnding","format","retailSales","wholesaleSales","unitsSold","retailerMargin"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { ProductSaleModel } from \"../api/productModels\";\nimport \"../styles/productSales.css\"\n\nexport interface ProductSalesTableProps {\n  readonly sales: ProductSaleModel[];\n}\n\ninterface Sort {\n  key: keyof ProductSaleModel;\n  direction: 'ASC' | 'DESC';\n}\n\nconst DEFAULT_SORT: Sort = {\n  key: 'weekEnding',\n  direction: 'DESC'\n};\n\nconst usdFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 0\n})\n\nfunction getSaleComparator({ key, direction }: Sort): (a: ProductSaleModel, b: ProductSaleModel) => number {\n  if (key === 'weekEnding') {\n    const compareDate = (saleA: ProductSaleModel, saleB: ProductSaleModel) => {\n      const [dateA, dateB] = [new Date(saleA[key]), new Date(saleB[key])];\n      if (dateA < dateB) {\n        return -1;\n      } else if (dateA > dateB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n    const inversedCompareDate = (a: ProductSaleModel, b: ProductSaleModel) => (-1 * compareDate(a, b));\n    return direction === 'ASC' ? compareDate : inversedCompareDate;\n  } else {\n    const compareNumber = (saleA: ProductSaleModel, saleB: ProductSaleModel) => {\n      return saleA[key] - saleB[key];\n    }\n    const inversedCompareNumber = (a: ProductSaleModel, b: ProductSaleModel) => (-1 * compareNumber(a, b));\n    return direction === 'ASC' ? compareNumber : inversedCompareNumber;\n  }\n}\n\nexport default function ProductSalesTable({ sales }: ProductSalesTableProps) {\n  const [sort, setSort] = useState<Sort>(DEFAULT_SORT);\n\n  const updateSort = function(key: keyof ProductSaleModel) {\n    if (sort.key === key) {\n      setSort({\n        key: key,\n        direction: sort.direction === 'ASC' ? 'DESC' : 'ASC'\n      });\n    } else {\n      setSort({\n        key: key,\n        direction: DEFAULT_SORT.direction\n      });\n    }\n  }\n\n  const sorted = [...sales].sort(getSaleComparator(sort));\n\n  return (\n    <table>\n      <thead>\n        <tr className={sort.direction === 'ASC' ? 'Ascending' : 'Descending'}>\n          <th className={sort.key === 'weekEnding' ? 'Sorted' : ''} onClick={() => updateSort('weekEnding')} scope=\"col\">Week Ending</th>\n          <th className={sort.key === 'retailSales' ? 'Sorted' : ''} onClick={() => updateSort('retailSales')} scope=\"col\">Retail Sales</th>\n          <th className={sort.key === 'wholesaleSales' ? 'Sorted' : ''} onClick={() => updateSort('wholesaleSales')} scope=\"col\">Wholesale Sales</th>\n          <th className={sort.key === 'unitsSold' ? 'Sorted' : ''} onClick={() => updateSort('unitsSold')} scope=\"col\">Units Sold</th>\n          <th className={sort.key === 'retailerMargin' ? 'Sorted' : ''} onClick={() => updateSort('retailerMargin')} scope=\"col\">Retailer Margin</th>\n        </tr>\n      </thead>\n      <tbody>\n        { sorted.map((sale, index) => (\n          <tr key={`sale-${index}`}>\n            <td>{ sale.weekEnding }</td>\n            <td>{ usdFormatter.format(sale.retailSales) }</td>\n            <td>{ usdFormatter.format(sale.wholesaleSales) }</td>\n            <td>{ sale.unitsSold }</td>\n            <td>{ usdFormatter.format(sale.retailerMargin) }</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}"]},"metadata":{},"sourceType":"module"}